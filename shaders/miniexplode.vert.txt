#version 410

layout(location=0) in vec2 points;
layout(location=1) in vec2 direction;  // Instanced
layout(location=2) in float angle;       // Instanced		
layout(location=3) in float radius;    // Instanced

uniform mat4 proj; //view and projection matrix
uniform mat4 matrix;

uniform vec4 color;
uniform float depth;
uniform float time;
uniform vec2 center;
uniform float xratio;
uniform float yratio;

out vec4 colour;

void main()
{
  gl_PointSize = 2;
  colour = color;
  //float angle = spin.x + spin.y*500*time;
  float x = points.x*cos(angle) - points.y*sin(angle);
  float y = points.x*sin(angle) + points.y*cos(angle);
  vec2 pos = center + direction*time;
  pos+= vec2(x, y)*radius;
  pos.x*= xratio;
  pos.y*= yratio;
  gl_Position = proj * matrix * vec4(pos, depth, 1.0);
}