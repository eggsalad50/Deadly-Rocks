#version 410

layout(location=0) in vec2 vertex;
layout(location=1) in vec2 pos;
layout(location=2) in vec3 color;
layout(location=3) in float radius;
layout(location=4) in float angle;
layout(location=5) in int alive;

uniform mat4 proj;
uniform mat4 matrix;

uniform float depth;
uniform vec2 ratio;
uniform float seed1;
uniform float seed2;
uniform float time;

out vec3 colour;

// Get random number from a coordinate
float Rnd(vec2 cord)
{
  int n = int(cord.x * seed1 + cord.y * seed2);  // Was 40.0 and 6400.0
  n = (n << 13) ^ n;
  // Returns number from 0.0 to 2.0
  float result = 2.0 - float((n*(n*n*15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824;
  // Change number to a range of 0.8 to 1.05;
  return result*0.125 + 0.8;
}

void main()
{
  if (alive>0)
  {
    colour = color;
    float sintheta = sin(angle);
    float costheta = cos(angle);
    vec2 xy = vec2(vertex.x*costheta - vertex.y*sintheta, vertex.x*sintheta + vertex.y*costheta);
    vec2 fpos = xy*ratio * (radius * Rnd(vec2(vertex.x+ float(gl_InstanceID), vertex.y+float(gl_InstanceID))));
    fpos+= pos*ratio;                 
    gl_Position = proj * vec4(fpos, depth, 1.0);
  }
}